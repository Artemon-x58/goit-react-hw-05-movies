{"version":3,"file":"static/js/219.c699f440.chunk.js","mappings":"kLAEaA,EAAa,SAACC,EAAOC,GAChC,OAAOC,EAAAA,EAAAA,IACA,gCAADC,OAAiCF,GAAO,CAC1CG,OAAQ,CAAEC,SAAU,QAASC,MAAON,GACpCO,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAI,GACnC,C,8HCXaC,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8CAKpBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gGAOpBG,EAAaL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mEAMvBK,EAAYP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qDAKpBO,EAAgBT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8B,0BC6BrC,EA1Ca,WACX,IAAAS,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAEtBG,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAO,SAAAlC,OAAYgC,EAAO,YAShC,OARAG,EAAAA,EAAAA,YAAU,WACRJ,GAAa,IACbnC,EAAAA,EAAAA,QAAWwC,EAAWF,GACnB3B,MAAK,SAAAE,GAAI,OAAIkB,EAAQlB,EAAKiB,KAAK,IAC/BW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IAC7BG,SAAQ,kBAAMV,GAAa,EAAM,GACtC,GAAG,CAACG,KAGFQ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGd,GACCY,EAAAA,EAAAA,KAACG,EAAAA,EAAM,KAEPH,EAAAA,EAAAA,KAAChC,EAAQ,CAAAkC,SACU,IAAhBlB,EAAKoB,QACJJ,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+CAEHlB,EAAKqB,KAAI,SAAAC,GAAA,IAAGC,EAAOD,EAAPC,QAASC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAAS,OAChDC,EAAAA,EAAAA,MAACvC,EAAQ,CAAA8B,SAAA,EACPF,EAAAA,EAAAA,KAAC1B,EAAU,CACTsC,IACEJ,EAAY,kCAAAlD,OAC0BkD,GAClC,iFAGRR,EAAAA,EAAAA,KAACxB,EAAS,CAAA0B,SAAEO,KACZT,EAAAA,EAAAA,KAACtB,EAAa,CAAAwB,SAAEQ,MATHH,EAUJ,OAOzB,C,4EClDaJ,EAAS,WACpB,OACEH,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CACHC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKrB,C","sources":["API/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Loader/Loader.js"],"sourcesContent":["import axios from 'axios';\n\nexport const apiResults = (title, url) => {\n  return axios\n    .get(`https://api.themoviedb.org/3/${url}`, {\n      params: { language: 'en-US', query: title },\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyM2FkNGFkNWM2Mzg1ZmYzYjZlZThlN2NkYzFmNWVhOCIsInN1YiI6IjY0ZjRkMzZjOWU0NTg2MDEzYWY5MmExOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gw-4nvIFz2mahV7u6nEjviVxuuefwHpWagfQWIKcjSI',\n      },\n    })\n    .then(response => response.data);\n};\n","import styled from 'styled-components';\n\nexport const ListCast = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ItemCast = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 20px;\n`;\n\nexport const PhotoActor = styled.img`\n  width: 250px;\n  height: auto;\n  border-radius: 5px;\n`;\n\nexport const NameActor = styled.p`\n  margin-top: 10px;\n  font-weight: bold;\n`;\n\nexport const NameCharacter = styled.p`\n  margin-top: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {\n  ItemCast,\n  ListCast,\n  NameActor,\n  NameCharacter,\n  PhotoActor,\n} from './Cast.styled';\nimport { apiResults } from '../../API/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const urlCast = `movie/${movieId}/credits`;\n  useEffect(() => {\n    setIsLoading(true);\n    apiResults(undefined, urlCast)\n      .then(data => setCast(data.cast))\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }, [urlCast]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ListCast>\n          {cast.length === 0 ? (\n            <p>We don't have any cast list for this movie</p>\n          ) : (\n            cast.map(({ cast_id, profile_path, name, character }) => (\n              <ItemCast key={cast_id}>\n                <PhotoActor\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n                  }\n                />\n                <NameActor>{name}</NameActor>\n                <NameCharacter>{character}</NameCharacter>\n              </ItemCast>\n            ))\n          )}\n        </ListCast>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n"],"names":["apiResults","title","url","axios","concat","params","language","query","headers","accept","Authorization","then","response","data","ListCast","styled","_templateObject","_taggedTemplateLiteral","ItemCast","_templateObject2","PhotoActor","_templateObject3","NameActor","_templateObject4","NameCharacter","_templateObject5","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","urlCast","useEffect","undefined","catch","err","console","log","finally","_jsx","_Fragment","children","Loader","length","map","_ref","cast_id","profile_path","name","character","_jsxs","src","Grid","color","height","width","wrapperStyle","position","top","left","transform"],"sourceRoot":""}